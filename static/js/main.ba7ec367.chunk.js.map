{"version":3,"sources":["components/Autocomplete.js","utils/FormattingUtil.js","App.js","service/PokemonService.js","index.js"],"names":["Autocomplete","options","limit","placeholder","callback","useState","suggestions","setSuggestions","inputValue","setInputValue","handleClick","event","target","innerText","className","type","onChange","value","items","filter","op","startsWith","toLowerCase","slice","map","suggestion","onClick","FormattingUtil","string","charAt","toUpperCase","number","Math","round","Number","EPSILON","pokemonService","a","axios","get","response","data","results","poke","name","types","push","capitalize","id","img","sprites","other","front_default","height","roundOff","weight","stats","hp","base_stat","attack","defense","special_attack","special_defense","speed","fac","FastAverageColor","App","pokemonList","setPokemonList","pokemonInformation","setPokemonInformation","useEffect","getAllNames","then","result","handleAutoComplete","pokemon","getPokemonByName","pokemonInfo","changeBackground","imgUrl","dynamicBackground","document","querySelector","getColorAsync","color","style","backgroundColor","hex","src","alt","title","gridColumnStart","replaceAll","toString","padStart","class","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba7ec367.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nfunction Autocomplete({options, limit, placeholder = \"\", callback}) {\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    function handleChange(event) {\r\n        setInputValue(event.target.value);\r\n\r\n        if (event.target.value === \"\") return setSuggestions([]);\r\n\r\n        const items = options.filter(op => {\r\n            return op.startsWith(event.target.value.toLowerCase());\r\n        })\r\n\r\n        setSuggestions(items.slice(0, limit));\r\n    }\r\n\r\n\r\n\r\n    function handleClick(event) {\r\n        setInputValue(event.target.innerText);\r\n        setSuggestions([]);\r\n\r\n        callback(event.target.innerText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"AutoSuggest\">\r\n            <input type=\"text\" onChange={handleChange} placeholder={placeholder} value={inputValue}/>\r\n            <ul className=\"suggestions\">\r\n                {suggestions.map(suggestion => (\r\n                    <li key={suggestion} onClick={handleClick}>\r\n                        {suggestion}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Autocomplete;\r\n","class FormattingUtil {\r\n    static capitalize(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1)\r\n    }\r\n\r\n    static roundOff(number) {\r\n        return Math.round((number  + Number.EPSILON) * 100) / 100\r\n    }\r\n}\r\n\r\nexport default FormattingUtil;","import './App.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport Autocomplete from \"./components/Autocomplete\";\r\nimport FastAverageColor from 'fast-average-color';\r\nimport PokemonService from \"./service/PokemonService\";\r\n\r\n\r\nconst pokemonService = new PokemonService();\r\n\r\nconst fac = new FastAverageColor();\r\n\r\nfunction App() {\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [pokemonInformation, setPokemonInformation] = useState(\"\");\r\n\r\n    /*eslint-disable*/\r\n    useEffect(() => {\r\n        pokemonService.getAllNames().then(result => setPokemonList(result));\r\n        handleAutoComplete(\"bulbasaur\")\r\n    }, []);\r\n    /*eslint-enable*/\r\n\r\n\r\n    const handleAutoComplete = (pokemon) => {\r\n        pokemonService.getPokemonByName(pokemon).then(pokemonInfo => {\r\n            setPokemonInformation(pokemonInfo);\r\n            changeBackground(pokemonInfo.img).then();\r\n        });\r\n    }\r\n\r\n    const changeBackground = async (imgUrl) => {\r\n        const dynamicBackground = document.querySelector(\".image-column\");\r\n        const color = await fac.getColorAsync(imgUrl);\r\n        dynamicBackground.style.backgroundColor = color.hex;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {/* Left column */}\r\n            <div className=\"col image-column\">\r\n                <div>{/* Placeholder */}</div>\r\n                <img src={pokemonInformation.img} alt=\"\"/>\r\n                {pokemonInformation && (\r\n                <div className=\"type-icon-parent\">\r\n                    {pokemonInformation.types.map(type => (\r\n                        <img src={`./types/${type}.png`} alt=\"\" className=\"type-icon\" title={type}/>\r\n                    ))}\r\n                </div>\r\n                )}\r\n            </div>\r\n            {/* Right column */}\r\n            <div className=\"col information-column\">\r\n                <div>\r\n                    <div className=\"navbar\">\r\n                        <img src={\"./Pokédex_logo.png\"} className=\"logo\" alt=\"\"/>\r\n                        <Autocomplete options={pokemonList} limit=\"10\" placeholder=\"Search Pokémon\"\r\n                                      callback={handleAutoComplete}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"stats\">\r\n                    {pokemonInformation && (\r\n                        <>\r\n                            <div style={{gridColumnStart: \"span 2\"}}>\r\n                                <div className=\"pokemon-name\">{pokemonInformation.name.replaceAll(\"-\", \"‑\")}</div>\r\n                                <div className=\"pokemon-id\">#{pokemonInformation.id.toString().padStart(3, '0')}</div>\r\n                            </div>\r\n                            <div>\r\n                                <span>{pokemonInformation.stats.hp}</span>\r\n                                <span>HP</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{pokemonInformation.stats.speed}</span>\r\n                                <span>Speed</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{pokemonInformation.stats.attack}</span>\r\n                                <span>Attack</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{pokemonInformation.stats.defense}</span>\r\n                                <span>Defense</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{pokemonInformation.stats.special_attack}</span>\r\n                                <span>Sp. Attack</span>\r\n                            </div>\r\n                            <div>\r\n                                <span>{pokemonInformation.stats.special_defense}</span>\r\n                                <span>Sp. Defense</span>\r\n                            </div>\r\n                            <div class=\"other-stats\">\r\n                                Height: {pokemonInformation.height}M Weight: {pokemonInformation.weight}Kg\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\nimport FormattingUtil from \"../utils/FormattingUtil\";\r\n\r\nclass PokemonService {\r\n    async getAllNames() {\r\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=1118');\r\n        return response.data.results.map(poke => poke.name)\r\n    }\r\n\r\n    async getPokemonByName(name) {\r\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n\r\n        let types = [];\r\n\r\n        for (let type of response.data.types) {\r\n            types.push(FormattingUtil.capitalize(type.type.name));\r\n        }\r\n\r\n        return {\r\n            id: response.data.id,\r\n            name: FormattingUtil.capitalize(response.data.name),\r\n            img: response.data.sprites.other[\"official-artwork\"].front_default,\r\n            height: FormattingUtil.roundOff(response.data.height * 0.1),\r\n            weight: FormattingUtil.roundOff(response.data.weight * 0.1),\r\n            stats: {\r\n                hp: response.data.stats[0].base_stat,\r\n                attack: response.data.stats[1].base_stat,\r\n                defense: response.data.stats[2].base_stat,\r\n                special_attack: response.data.stats[3].base_stat,\r\n                special_defense: response.data.stats[4].base_stat,\r\n                speed: response.data.stats[5].base_stat,\r\n            },\r\n            types: types\r\n        }\r\n    }\r\n}\r\n\r\nexport default PokemonService;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}