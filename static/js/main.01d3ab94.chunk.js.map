{"version":3,"sources":["utils/FormattingUtil.js","service/PokemonService.js","components/PokemonStat.js","components/PokemonInformation.js","components/Autocomplete.js","components/Navbar.js","components/IconButton.js","App.js","index.js"],"names":["FormattingUtil","string","charAt","toUpperCase","slice","number","Math","round","Number","EPSILON","PokemonService","a","axios","get","response","data","results","map","item","pokemon","name","id","url","replace","types","type","push","capitalize","img","sprites","other","front_default","height","roundOff","weight","stats","value","base_stat","PokemonStat","stat","PokemonInformation","className","style","gridColumnStart","replaceAll","toString","padStart","Autocomplete","options","limit","placeholder","callback","useState","suggestions","setSuggestions","inputValue","setInputValue","onChange","event","target","items","filter","op","startsWith","toLowerCase","suggestion","onClick","Navbar","src","process","alt","IconButton","title","icon","Icons","pokemonService","fac","FastAverageColor","App","pokemonList","setPokemonList","pokemonInformation","setPokemonInformation","backgroundRef","useRef","useEffect","getAllNames","then","result","updateScreen","getPokemonByName","pokemonInfo","fallback","changeBackground","imgUrl","color","getColorAsync","fullColor","hex","current","backgroundColor","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01d3ab94.chunk.js","sourcesContent":["class FormattingUtil {\r\n    static capitalize(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1)\r\n    }\r\n\r\n    static roundOff(number) {\r\n        return Math.round((number  + Number.EPSILON) * 100) / 100\r\n    }\r\n}\r\n\r\nexport default FormattingUtil;","import axios from \"axios\";\r\nimport FormattingUtil from \"../utils/FormattingUtil\";\r\n\r\nclass PokemonService {\r\n    async getAllNames() {\r\n        const response = await axios.get('https://pokeapi.co/api/v2/pokemon-species/?limit=20000');\r\n\r\n        return response.data.results.map(item => {\r\n            const pokemon = {};\r\n\r\n            pokemon.name = item.name;\r\n            pokemon.id = item.url.replace(\"https://pokeapi.co/api/v2/pokemon-species/\", \"\").slice(0, -1);\r\n\r\n            return pokemon;\r\n        })\r\n\r\n    }\r\n\r\n    async getPokemonByName(name) {\r\n        const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n\r\n        let types = [];\r\n\r\n        for (let type of response.data.types) {\r\n            types.push(FormattingUtil.capitalize(type.type.name));\r\n        }\r\n\r\n        return {\r\n            id: response.data.id,\r\n            name: FormattingUtil.capitalize(response.data.name),\r\n            img: response.data.sprites.other[\"official-artwork\"].front_default,\r\n            height: FormattingUtil.roundOff(response.data.height * 0.1),\r\n            weight: FormattingUtil.roundOff(response.data.weight * 0.1),\r\n            stats: [\r\n                {\r\n                    name: \"HP\",\r\n                    value: response.data.stats[0].base_stat\r\n                },\r\n                {\r\n                  name: \"Speed\",\r\n                  value: response.data.stats[5].base_stat\r\n                },\r\n                {\r\n                    name: \"Attack\",\r\n                    value: response.data.stats[1].base_stat\r\n                },\r\n                {\r\n                    name: \"Defense\",\r\n                    value:  response.data.stats[2].base_stat\r\n                },\r\n                {\r\n                    name: \"Sp. Attack\",\r\n                    value: response.data.stats[3].base_stat\r\n                },\r\n                {\r\n                    name: \"Sp. Defense\",\r\n                    value: response.data.stats[4].base_stat\r\n                }\r\n            ],\r\n            types: types\r\n        }\r\n    }\r\n}\r\n\r\nexport default PokemonService;","function PokemonStat({ stat, value }) {\r\n    return (\r\n        <div>\r\n            <span>{value}</span>\r\n            <span>{stat}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonStat;","import PokemonStat from \"./PokemonStat\";\r\n\r\nfunction PokemonInformation({data}) {\r\n    return (\r\n        <div className=\"stats\">\r\n            <div style={{gridColumnStart: \"span 2\"}}>\r\n                <div className=\"pokemon-name\">\r\n                    {data.name.replaceAll(\"-\", \"â€‘\")}\r\n                </div>\r\n                <div className=\"pokemon-id\">#{data?.id.toString().padStart(3, '0')}</div>\r\n            </div>\r\n\r\n            {data.stats.map(\r\n                (stat) => <PokemonStat stat={stat?.name} value={stat?.value}/>\r\n            )}\r\n\r\n            <div className=\"other-stats\" style={{gridColumnStart: \"span 2\"}}>\r\n                Height: {data?.height}M Weight: {data?.weight}Kg\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonInformation;","import {useState} from \"react\";\r\n\r\nfunction Autocomplete({options, limit, placeholder = \"\", callback}) {\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    function handleChange(event) {\r\n        setInputValue(event.target.value);\r\n\r\n        if (event.target.value === \"\") return setSuggestions([]);\r\n\r\n        const items = options.filter(op => {\r\n            return op.name.startsWith(event.target.value.toLowerCase());\r\n        })\r\n\r\n        setSuggestions(items.slice(0, limit));\r\n    }\r\n\r\n\r\n\r\n    function handleClick(name, id) {\r\n\r\n        setInputValue(name);\r\n        setSuggestions([]);\r\n\r\n        callback(id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"AutoSuggest\">\r\n            <input type=\"text\" onChange={handleChange} placeholder={placeholder} value={inputValue}/>\r\n            <div className=\"AutoSuggest-list\">\r\n                {suggestions.map(suggestion => (\r\n                    <div key={suggestion.id} className=\"AutoSuggest-item\" onClick={() => handleClick(suggestion.name, suggestion.id)}>\r\n                        {suggestion.name}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Autocomplete;\r\n","import Autocomplete from \"./Autocomplete\";\r\n\r\nfunction Navbar({data, callback}) {\r\n    return (\r\n        <div>\r\n            <div className=\"navbar\">\r\n                <img src={`${process.env.PUBLIC_URL}/PokÃ©dex_logo.png`} className=\"logo\" alt=\"\"/>\r\n                <Autocomplete options={data} limit=\"10\" placeholder=\"Search PokÃ©mon\"\r\n                              callback={callback}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport * as Icons from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction IconButton({title, icon, onClick}) {\r\n\r\n return (\r\n     <button className=\"btn\" onClick={onClick} title={title}>\r\n         <FontAwesomeIcon icon={Icons[icon]} />\r\n     </button>\r\n )\r\n}\r\n\r\nexport default IconButton;","import './App.css';\r\nimport {useEffect, useState, useRef} from \"react\";\r\nimport FastAverageColor from 'fast-average-color';\r\nimport PokemonService from \"./service/PokemonService\";\r\nimport PokemonInformation from \"./components/PokemonInformation\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport IconButton from \"./components/IconButton\";\r\n\r\nconst pokemonService = new PokemonService();\r\n\r\nconst fac = new FastAverageColor();\r\n\r\nfunction App() {\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [pokemonInformation, setPokemonInformation] = useState(null);\r\n    const backgroundRef = useRef();\r\n\r\n    /*eslint-disable*/\r\n    useEffect(() => {\r\n        pokemonService.getAllNames().then(result => setPokemonList(result));\r\n        updateScreen(\"bulbasaur\")\r\n    }, []);\r\n    /*eslint-enable*/\r\n\r\n\r\n    const updateScreen = (pokemon) => {\r\n\r\n        if (pokemon < 1 || pokemon > 898) return;\r\n\r\n\r\n        pokemonService.getPokemonByName(pokemon).then(pokemonInfo => {\r\n            let fallback = false;\r\n\r\n            if(pokemonInfo.img === null) {\r\n                pokemonInfo.img = \"./fallback.png\";\r\n                fallback = true;\r\n            }\r\n\r\n            changeBackground(pokemonInfo.img, fallback).then();\r\n            setPokemonInformation(pokemonInfo);\r\n\r\n        });\r\n    }\r\n\r\n    const changeBackground = async (imgUrl, fallback = false) => {\r\n        let color;\r\n\r\n        if (fallback) {\r\n            color = \"#4a4a4a\";\r\n        } else {\r\n            const fullColor = await fac.getColorAsync(imgUrl);\r\n            color = fullColor.hex;\r\n        }\r\n\r\n        backgroundRef.current.style.backgroundColor = color;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"top-bar\">\r\n                <img src={`${process.env.PUBLIC_URL}/PokÃ©dex_logo.png`} className=\"logo\" alt=\"\"/>\r\n            </div>\r\n            {/* Left column */}\r\n            <div className=\"col image-column\" ref={backgroundRef}>\r\n                <div>{/* Placeholder */}</div>\r\n                <div className=\"img-row\">\r\n                   <IconButton title=\"Previous\" icon=\"faChevronLeft\" onClick={() => updateScreen(pokemonInformation.id - 1)}/>\r\n                    <img src={pokemonInformation?.img} className=\"pokemon-img\" alt=\"\"/>\r\n                    <IconButton title=\"Next\" icon=\"faChevronRight\" onClick={() => updateScreen(pokemonInformation.id + 1)}/>\r\n                </div>\r\n\r\n                <div className=\"type-icon-parent\">\r\n                    {pokemonInformation && pokemonInformation.types.map(type => (\r\n                        <img src={`${process.env.PUBLIC_URL}/types/${type}.png`} alt=\"\" className=\"type-icon\" title={type}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Right column */}\r\n            <div className=\"col information-column\">\r\n                <Navbar data={pokemonList} callback={updateScreen} />\r\n                { pokemonInformation && <PokemonInformation data={pokemonInformation} />}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}